; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FF28A4E6-F7AF-4A44-9250-BA936DACA055}
AppName=BRCache Server
AppVersion=1.0 Beta 3
;AppVerName=BRCache Server 1.0 Beta 3
AppPublisher=Brandao
AppPublisherURL=http://brcache.brandao.org/
AppSupportURL=http://brcache.brandao.org/
AppUpdatesURL=http://brcache.brandao.org/
DefaultDirName={pf}\BRCache 1.0-b3
DefaultGroupName=BRCache 1.0 Beta
AllowNoIcons=yes
OutputDir=C:\projetos
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes
Uninstallable=yes

[run]
;Filename: {sys}\sc.exe; Parameters: "create BRCache10b3 start= auto binPath= ""java -Xms{heapMemory}m -Xmx{heapMemory}m -jar {app}\brcache-server-1.0-b3.jar --default-file=""{app}\brcache.conf"" """ ; Flags: runhidden

[UninstallRun]
;Filename: {sys}\sc.exe; Parameters: "stop BRCache10b3" ; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: "delete BRCache10b3" ; Flags: runhidden

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "C:\projetos\brcache\brcache-server\target\brcache-server-1.0-b3.jar"; DestDir: "{app}"; AfterInstall: CreateConfig; Flags: ignoreversion
Source: "C:\projetos\brcache\brcache-server\target\lib\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "C:\projetos\brcache\brcache-server\install\server.bmp"; DestDir: "{tmp}"; Flags: dontcopy
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:UninstallProgram,BRCache Server}"; Filename: "{uninstallexe}"

[Code]
var
  developerOption: TNewRadioButton;
  serverOption: TNewRadioButton;
  dedicatedServerOption: TNewRadioButton;
  memory : integer;
  developMemory : Extended;
  serverMemory : Extended;
  dedicatedMemory : Extended;
  heapMemory: integer;

//*********************************************************************************
// Decodifica a versão do java.
//*********************************************************************************

procedure DecodeVersion (verstr: String; var verint: array of Integer);
var
  i,p: Integer; s: string;
begin
  // initialize array
  verint := [0,0,0,0];
  i := 0;
  while ((Length(verstr) > 0) and (i < 4)) do
  begin
    p := pos ('.', verstr);
    if p > 0 then
    begin
      if p = 1 then s:= '0' else s:= Copy (verstr, 1, p - 1);
      verint[i] := StrToInt(s);
      i := i + 1;
      verstr := Copy (verstr, p+1, Length(verstr));
    end
    else
    begin
      verint[i] := StrToInt (verstr);
      verstr := '';
    end;
  end;

end;

//*********************************************************************************
// Compara a versão do java.
//*********************************************************************************

function CompareVersion (ver1, ver2: String) : Integer;
var
  verint1, verint2: array of Integer;
  i: integer;
begin

  SetArrayLength (verint1, 4);
  DecodeVersion (ver1, verint1);

  SetArrayLength (verint2, 4);
  DecodeVersion (ver2, verint2);

  Result := 0; i := 0;
  while ((Result = 0) and ( i < 4 )) do
  begin
    if verint1[i] > verint2[i] then
      Result := 1
    else
      if verint1[i] < verint2[i] then
        Result := -1
      else
        Result := 0;
    i := i + 1;
  end;

end;

//*********************************************************************************
// Verifica se o java está instalado.
//*********************************************************************************

function CheckJava(): Boolean;
var
  ErrorCode: Integer;
  JavaVer : String;
  Result1 : Boolean;
begin
    RegQueryStringValue(HKLM, 'SOFTWARE\JavaSoft\Java Runtime Environment', 'CurrentVersion', JavaVer);
    Result := false;
    if Length( JavaVer ) > 0 then
    begin
    	if CompareVersion(JavaVer,'1.5') >= 0 then
    	begin
    		Result := true;
    	end;
    end;
    if Result = false then
    begin
    	Result1 := MsgBox('This tool requires Java Runtime Environment v1.5 or older to run. Please download and install JRE and run this setup again.' + #13 + #10 + 'Do you want to download it now?',
    	  mbConfirmation, MB_YESNO) = idYes;
    	if Result1 = true then
    	begin
    		ShellExec('open',
    		  'http://www.java.com/en/download/manual.jsp#win',
    		  '','',SW_SHOWNORMAL,ewNoWait,ErrorCode);
    	end;
    end;
end;

//*********************************************************************************
// Obtém a memória total disponível
//*********************************************************************************

procedure loadTotalMemory();
var
  i,ramsize:integer;
  resultcode:integer;
  TmpFileName,ExecStdout,tempstr, tmp:string;  
  FileLines: TArrayOfString;
  mem: integer;
 begin
  //cmd /C wmic computersystem get TotalPhysicalMemory /VALUE | find "TotalPhysicalMemory"
  TmpFileName := ExpandConstant('{tmp}') + '\systeminformation.txt';
  Exec('cmd.exe', '/C wmic computersystem get TotalPhysicalMemory /VALUE | find "TotalPhysicalMemory" > "' + TmpFileName + '"', '', SW_HIDE,ewWaitUntilTerminated, ResultCode);
  LoadStringsFromFile(TmpFileName, FileLines)

  //if LoadStringFromFile(TmpFileName, ExecStdout) then
  if(GetArrayLength(FileLines) > 0) then
  begin
    deletefile(TmpFileName);
    Execstdout := FileLines[0];
    ExecStdout :=copy(Execstdout,21, Length(Execstdout));
    if(Length(ExecStdout) <= 6 ) then
    begin
      mem := 1024;
    end else
    begin
      tmp :=copy(ExecStdout, 0, Length(ExecStdout) - 6);
      mem := StrToInt(tmp);
    end

    memory := mem;
    //Msgbox('RAM SIZE OF THIS SYSTEM IS : ~' + ExecStdout + '~ MB ' + IntToStr(Length(ExecStdout)),mbinformation,mb_ok);
    //Msgbox('RAM SIZE OF THIS SYSTEM IS : ~' + IntToStr(mem) + ' MB' ,mbinformation,mb_ok);
  end;

 end;

//*********************************************************************************
// Gera o arquivo de configuração
//*********************************************************************************

procedure CreateConfig();
var 
  Strings : TArrayOfString;
  nodes_buffer_size: Extended;
  index_buffer_size: Extended;
  data_buffer_size: Extended;
  mem: integer;
begin
  nodes_buffer_size := 20;
  index_buffer_size := 12;
  data_buffer_size  := 64;
  heapMemory        := 128;
  //If(developerOption.Checked) then
  //begin
  //  nodes_buffer_size := 20;
  //  index_buffer_size := 12;
  //  data_buffer_size  := 64;
  //end
  //else
  If(serverOption.Checked) then
  begin
    nodes_buffer_size := serverMemory * 0.4;
    index_buffer_size := serverMemory * 0.12;
    data_buffer_size  := serverMemory * 0.64;
    heapMemory        := Trunc(serverMemory);
  end
  else
  If(dedicatedServerOption.Checked) then
  begin
    nodes_buffer_size := dedicatedMemory * 0.4;
    index_buffer_size := dedicatedMemory * 0.12;
    data_buffer_size  := dedicatedMemory * 0.64;
    heapMemory        := Trunc(dedicatedMemory);
  end

  SetArrayLength(Strings, 103);

  Strings[  0] := '# Arquivo de configuração da instância do BRCache Server';
  Strings[  1] := '# ------------------------------------------------------------------------';
  Strings[  2] := '# Gerado pelo instalador do BRCache Server';
  Strings[  3] := '';
  Strings[  4] := '# Opções específicas do servidor';
  Strings[  5] := '# ------------------------------------------------------------------------';
  Strings[  6] := '';
  Strings[  7] := '# Porta TCP/IP que o serivodr BRCache usa para escutar.';
  Strings[  8] := '# O valor padrão é 1044';
  Strings[  9] := 'port=1044';
  Strings[ 10] := '';
  Strings[ 11] := '# Quantidade máxima de sessões que o BRCache permite.';
  Strings[ 12] := '# O valor padrão é 1024';
  Strings[ 13] := 'max_connections=1024';
  Strings[ 14] := '';
  Strings[ 15] := '# Quantidade de processos, para cada buffer, que fazem a troca dos dados da ';
  Strings[ 16] := '# memória com outro dispositivo.';
  Strings[ 17] := '# O valor padrão é 4.';
  Strings[ 18] := 'swapper_thread=4';
  Strings[ 19] := '';
  Strings[ 20] := '# Timeout das conexões, em milesegundos.';
  Strings[ 21] := '# O valor padrão é 1000.';
  Strings[ 22] := 'timeout_connection=1000';
  Strings[ 23] := '';
  Strings[ 24] := '# Tamanho do buffer de escrita.';
  Strings[ 25] := '# O valor padrão é 8k.';
  Strings[ 26] := 'write_buffer_size=8k';
  Strings[ 27] := '';
  Strings[ 28] := '# Tamanho do buffer de leitura.';
  Strings[ 29] := '# O valor padrão é 8k.';
  Strings[ 30] := 'read_buffer_size=8k';
  Strings[ 31] := '';
  Strings[ 32] := '# Opções específicas do cache';
  Strings[ 33] := '# ------------------------------------------------------------------------';
  Strings[ 34] := '';
  Strings[ 35] := '# Local onde se faz a troca dos dados quando ';
  Strings[ 36] := '# o limite da memória é atingido.';
  Strings[ 37] := '# O valor padrão é "/var/brcache".';
  Strings[ 38] := 'data_path=' + ExpandConstant('{app}') + '/data';
  Strings[ 39] := '';
  Strings[ 40] := '# Tamanho do buffer usado para armazenar os nós na memória.';
  Strings[ 41] := '# O valor padrão é 1m.';
  Strings[ 42] := 'nodes_buffer_size=' + IntToStr(Trunc(nodes_buffer_size)) + 'm';
  Strings[ 43] := '';
  Strings[ 44] := '# Tamanho da página do buffer de nós.';
  Strings[ 45] := '# O valor padrão é 1k.';
  Strings[ 46] := 'nodes_page_size=1k';
  Strings[ 47] := '';
  Strings[ 48] := '# Fator de swap dos nós.';
  Strings[ 49] := '# O valor padrão é 0.3.';
  Strings[ 50] := 'nodes_swap_factor=0.1';
  Strings[ 51] := '';
  Strings[ 52] := '# Tamanho do buffer usado para armazenar o índice dos itens na memória.';
  Strings[ 53] := '# O valor padrão é 1m';
  Strings[ 54] := 'index_buffer_size=' + IntToStr(Trunc(index_buffer_size)) + 'm';
  Strings[ 55] := '';
  Strings[ 56] := '# Tamanho da página do buffer de índices.';
  Strings[ 57] := '# O valor padrão é 1k.';
  Strings[ 58] := 'index_page_size=1k';
  Strings[ 59] := '';
  Strings[ 60] := '# Fator de swap dos índices.';
  Strings[ 61] := '# O valor padrão é 0.3.';
  Strings[ 62] := 'index_swap_factor=0.1';
  Strings[ 63] := '';
  Strings[ 64] := '# Tamanho do buffer usado para armazenar os itens na memória.';
  Strings[ 65] := '# O valor padrão é 64m.';
  Strings[ 66] := 'data_buffer_size=' + IntToStr(Trunc(data_buffer_size)) + 'm';
  Strings[ 67] := '';
  Strings[ 68] := '# Tamanho da página do buffer de itens.';
  Strings[ 69] := '# O valor padrão é 8k.';
  Strings[ 70] := 'data_page_size=6k';
  Strings[ 71] := '';
  Strings[ 72] := '# Tamanho do bloco de dados.';
  Strings[ 73] := '# O valor padrão é 1k.';
  Strings[ 74] := 'data_block_size=1k';
  Strings[ 75] := '';
  Strings[ 76] := '# Fator de swap dos itens.';
  Strings[ 77] := '# O valor padrão é 0.3.';
  Strings[ 78] := 'data_swap_factor=0.1';
  Strings[ 79] := '';
  Strings[ 80] := '# Tamanho máximo, em bytes, que um item pode ter para ser armazenado no cache.';
  Strings[ 81] := 'max_size_entry=1m';
  Strings[ 82] := '';
  Strings[ 83] := '# Tamanho máximo, em bytes, que uma chave pode ter.';
  Strings[ 84] := 'max_size_key=256';
  Strings[ 85] := '';
  Strings[ 86] := '# Opções específicas do controle transacional';
  Strings[ 87] := '# ------------------------------------------------------------------------';
  Strings[ 88] := '';
  Strings[ 89] := '# Permite usar o suporte transacional.';
  Strings[ 90] := '# Pode assumir true ou false.';
  Strings[ 91] := '# true: habilita o suporte transacional.';
  Strings[ 92] := '# false: desabilita o suporte transacional.';
  Strings[ 93] := '# O valor padrão é false.';
  Strings[ 94] := 'transaction_support=false';
  Strings[ 95] := '';
  Strings[ 96] := '# Define o tempo máximo, em milesegundos, que uma operação pode demorar.';
  Strings[ 97] := '# O valor padrão é 5 minutos.';
  Strings[ 98] := 'transaction_timeout=300000';
  Strings[ 99] := '';
  Strings[100] := '# Gestor das transações no cache.';
  Strings[101] := '# O valor padrão é org.brandao.brcache.tx.CacheTransactionManagerImp.';
  Strings[102] := 'transaction_manager=org.brandao.brcache.tx.CacheTransactionManagerImp';

  SaveStringsToFile(ExpandConstant('{app}') + '\brcache.conf', Strings, False);

end;

//*********************************************************************************
// Formulário de seleção de tipo de instância.
//*********************************************************************************

function frm_select_instance(PreviousPageId: Integer): Integer;
var
Page: TWizardPage;
developerServerLabel: TLabel;
serverServerLabel: TLabel;
dedicatedServerServerLabel: TLabel;
titleLabel: TLabel;
//BitmapFileName: String;
//BitmapImage: TBitmapImage;

begin
  Page := CreateCustomPage(
    PreviousPageId,
    'BRCache Server Instance configuration',
    'Configure the BRCache server instance.'
  );

  titleLabel          := TLabel.Create(Page);
  titleLabel.Parent   := Page.Surface;
  titleLabel.Left     := 0;
  titleLabel.Top      := 0;
  titleLabel.Width    := Page.SurfaceWidth; 
  titleLabel.Height   := 12;
  titleLabel.AutoSize := False;
  titleLabel.Wordwrap := True;
  titleLabel.Caption  := 'Please select a server type. This will influence memory, disk and CPU usage.';

  // Developer machine

  developerOption            := TNewRadioButton.Create(Page);
  developerOption.Parent     := Page.Surface;
  developerOption.Checked    := True;
  developerOption.Top        := titleLabel.Top + titleLabel.Height + 8;
  developerOption.Width      := Page.SurfaceWidth;
  developerOption.Font.Style := [fsBold];
  developerOption.Font.Size  := 9;
  developerOption.Caption    := 'Developer Machine'

  //BitmapFileName := ExpandConstant('{tmp}\server.bmp');
  //ExtractTemporaryFile(ExtractFileName(BitmapFileName));

  //BitmapImage := TBitmapImage.Create(Page);
  //BitmapImage.AutoSize := True;
  //BitmapImage.Bitmap.LoadFromFile(BitmapFileName);
  //BitmapImage.Parent := Page.Surface;
  //BitmapImage.Width    := 40; 
  //BitmapImage.Height   := 40;

  developerServerLabel          := TLabel.Create(Page);
  developerServerLabel.Parent   := Page.Surface;
  developerServerLabel.Left     := 0;
  developerServerLabel.Top      := developerOption.Top + developerOption.Height + 2;
  developerServerLabel.Width    := Page.SurfaceWidth - 10;
  developerServerLabel.Height   := 40;
  developerServerLabel.AutoSize := False;
  developerServerLabel.Wordwrap := True;
  developerServerLabel.Caption  := 'This is a development machine, and many other applications will be run on it. BRCache Server should only use a minimal  amount of memory.';

  // Server machine
  serverOption            := TNewRadioButton.Create(Page);
  serverOption.Parent     := Page.Surface;
  serverOption.Checked    := False;
  serverOption.Top        := developerServerLabel.Top + developerServerLabel.Height + 8;
  serverOption.Width      := Page.SurfaceWidth;
  serverOption.Font.Style := [fsBold];
  serverOption.Font.Size  := 9;
  serverOption.Caption    := 'Server Machine'

  serverServerLabel          := TLabel.Create(Page);
  serverServerLabel.Parent   := Page.Surface;
  serverServerLabel.Left     := 0;
  serverServerLabel.Top      := serverOption.Top + serverOption.Height + 2;
  serverServerLabel.Width    := Page.SurfaceWidth - 10; 
  serverServerLabel.Height   := 40;
  serverServerLabel.AutoSize := False;
  serverServerLabel.Wordwrap := True;
  serverServerLabel.Caption  := 'Several server applications will be running on this machine. Choose this option for web/application servers. BRCache Server will have medium memory usage';


  // Dedicated Server machine
  dedicatedServerOption            := TNewRadioButton.Create(Page);
  dedicatedServerOption.Parent     := Page.Surface;
  dedicatedServerOption.Checked    := False;
  dedicatedServerOption.Top        := serverServerLabel.Top + serverServerLabel.Height + 8;
  dedicatedServerOption.Width      := Page.SurfaceWidth;
  dedicatedServerOption.Font.Style := [fsBold];
  dedicatedServerOption.Font.Size  := 9;
  dedicatedServerOption.Caption    := 'Dedicated Server Machine'

  dedicatedServerServerLabel          := TLabel.Create(Page);
  dedicatedServerServerLabel.Parent   := Page.Surface;
  dedicatedServerServerLabel.Left     := 0;
  dedicatedServerServerLabel.Top      := dedicatedServerOption.Top + dedicatedServerOption.Height + 2;
  dedicatedServerServerLabel.Width    := Page.SurfaceWidth - 10; 
  dedicatedServerServerLabel.Height   := 40;
  dedicatedServerServerLabel.AutoSize := False;
  dedicatedServerServerLabel.Wordwrap := True;
  dedicatedServerServerLabel.Caption  := 'This machine is dedicated to run the BRCache Server. No other servers, such as a web or mail server, will be run. BRCache server will utilize up to all available memory.';

end;

//*********************************************************************************
// Inicia junto com a instalação.
//*********************************************************************************

function InitializeSetup(): boolean;

begin
 Result := CheckJava();
end;

procedure InitializeWizard();
begin
  loadTotalMemory();
  developMemory   := 128;
  serverMemory    := memory * 0.25;
  dedicatedMemory := memory * 0.8;

  //Msgbox('developMemory : ~' + IntToStr(Trunc(developMemory)) + '~ MB ',mbinformation,mb_ok);
  //Msgbox('serverMemory : ~' + IntToStr(Trunc(serverMemory)) + '~ MB ',mbinformation,mb_ok);
  //Msgbox('dedicatedMemory : ~' + IntToStr(Trunc(dedicatedMemory)) + '~ MB ',mbinformation,mb_ok);

  frm_select_instance(wpSelectProgramGroup);
end;